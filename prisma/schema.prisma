// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  name         String         @unique
  username     String?
  email        String         @unique
  password     String
  rol          String?        @default("USER")
  avatar       String?
  premium      String?        @default("FREE")
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  logs         Logs[]
  income       Income[]
  methods      Methods[]
  tableNeeds   TableNeeds[]
  wishesNeeds  WishesNeeds[]
  savingsNeeds SavingsNeeds[]
}

model Logs {
  id          Int      @id @default(autoincrement())
  date        DateTime @default(now())
  serviceName String
  timeout     String
  duration    String
  error       String
  status      Int
  ok          String
  statusText  String
  authorId    Int
  author      User     @relation(fields: [authorId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Income {
  id        Int      @id @default(autoincrement())
  company   String
  amount    String
  total     String
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Methods {
  id            Int      @id @default(autoincrement())
  fiftyPercent  String
  thirtyPercent String
  twentyprecent String
  authorId      Int
  author        User     @relation(fields: [authorId], references: [id])
  createdAt     DateTime @default(now())
  updatedUp     DateTime @updatedAt
}

model TableNeeds {
  id            Int      @id @default(autoincrement())
  date          DateTime @default(now())
  title         String
  amount        String
  total         String
  categoryTable String?
  authorId      Int
  author        User     @relation(fields: [authorId], references: [id])
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model WishesNeeds {
  id            Int      @id @default(autoincrement())
  date          DateTime @default(now())
  title         String
  amount        String
  total         String
  categoryTable String?
  authorId      Int
  author        User     @relation(fields: [authorId], references: [id])
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model SavingsNeeds {
  id            Int      @id @default(autoincrement())
  date          DateTime @default(now())
  title         String
  amount        String
  total         String
  categoryTable String?
  authorId      Int
  author        User     @relation(fields: [authorId], references: [id])
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model EmailsClient {
  id Int @id @default(autoincrement())
  email String
  createdAt DateTime @default(now())
  updateAt DateTime @updatedAt
}